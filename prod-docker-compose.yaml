version: '3.3'

services:
  mysql:
    image: mysql:5.7
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_DATABASE: mysql
      MYSQL_USER: blog-user
      MYSQL_PASSWORD: supersecret
      MYSQL_ROOT_PASSWORD: supersecret

  ghost-api:
    build: ./backend
    image: ghost:3.18
    container_name: ghost-api
    volumes:
      - ghost-api:/var/lib/ghost-api
    restart: always
    ports:
      - 8000:2368
    environment:
      database__client: mysql
      database__connection__host: mysql
      database__connection__user: root
      database__connection__password: supersecret
      database__connection__database: mysql
    depends_on:
      - mysql
    entrypoint: ["wait-for-db.sh", "mysql", "--", "docker-entrypoint.sh"]
    command: ["node", "current/index.js"]
    networks:
      - nginx-proxy
      - default
    expose:
      - "8000"
      - "2368"
      - "80"
  
  frontend:
    image: node:12
    container_name: frontend
    build:
      context: '.'
      dockerfile: './frontend/Dockerfile'
    working_dir: '/usr/src/app/frontend'
    volumes:
      - frontend:/usr/src/app/frontend
    restart: always
    ports:
      - 3000:3000
    environment:
      GHOST_API_URL: "http://ghost-api:2368"
      CONTENT_API_KEY: "0f836c8054dc3b909b3698c0de"

    command:  [ "yarn", "start-prod" ]
    networks:
      - nginx-proxy
      - default
    expose:
      - "3000"

  nginx:
    build: ./nginx
    image: nginx:latest
    restart: always
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 8001:8001
      - 443:443
    depends_on:
      - ghost-api
      - frontend
    networks:
      - nginx-proxy
      - default
volumes:
  mysql: {}
  ghost-api: {}
  nginx: {}
  frontend: {}
networks:
  nginx-proxy:
